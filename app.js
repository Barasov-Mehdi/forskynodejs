const express = require('express');
const mongoose = require('mongoose');
const dotenv = require('dotenv');
const imageRoutes = require('./routes/imageRoutes');
const path = require('path'); // Gerekli: EJS View yolunu tanÄ±mlamak iÃ§in eklendi
const Image = require('./models/Image'); // Gerekli: Anasayfa iÃ§in DB'den resim Ã§ekmek iÃ§in eklendi

dotenv.config();
const app = express();

app.use(express.json());

// ğŸ’¡ EJS VIEW MOTORU AYARI
// Express'e 'ejs' ÅŸablon motorunu kullanacaÄŸÄ±nÄ± sÃ¶ylÃ¼yoruz
app.set('view engine', 'ejs');
// EJS ÅŸablonlarÄ±nÄ±n 'views' klasÃ¶rÃ¼nde olduÄŸunu belirtiyoruz
app.set('views', path.join(__dirname, 'views'));

// ğŸš€ KÃ–K DÄ°ZÄ°N (/) RotasÄ±: TarayÄ±cÄ±nÄ±n beklediÄŸi HTML sayfasÄ±nÄ± render eder
app.get('/', async (req, res) => {
    try {
        // TÃ¼m resimleri veritabanÄ±ndan Ã§ek ve son eklenene gÃ¶re sÄ±rala
        const images = await Image.find().sort({ createdAt: -1 });

        // 'index.ejs' ÅŸablonunu render et ve resim verilerini sayfaya gÃ¶nder
        res.render('index', { images: images });
    } catch (error) {
        console.error("Anasayfa yÃ¼klenirken hata oluÅŸtu:", error);
        res.status(500).send('Anasayfa yÃ¼klenirken bir sunucu hatasÄ± oluÅŸtu: ' + error.message);
    }
});

// API RotalarÄ± iÃ§in '/api/images' prefix'ini kullanmaya devam ediyoruz
app.use('/api/images', imageRoutes);

mongoose.connect(process.env.MONGODB_URL)
    .then(() => console.log('MongoDB baÄŸlantÄ±sÄ± baÅŸarÄ±lÄ±'))
    .catch(err => console.log('MongoDB baÄŸlantÄ± hatasÄ±:', err));

module.exports = app;
